{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Instashop server.",
        "title": "Instashop Swagger API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/api/v1/admin/order/{order_reference}/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the status of a specific order for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Reference",
                        "name": "order_reference",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Status Request",
                        "name": "updateOrder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.OrderResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " order": {
                                            "$ref": "#/definitions/model.Order"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Order has been (Shipped | Delivered)",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/product": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new product to the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.ProductResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " message": {
                                            "type": "string"
                                        },
                                        "product": {
                                            "$ref": "#/definitions/model.Product"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/admin/product/{product_code}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update product details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product Code",
                        "name": "product_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product Data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.ProductResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " message": {
                                            "type": "string"
                                        },
                                        "product": {
                                            "$ref": "#/definitions/model.Product"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a product by its product code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product Code",
                        "name": "product_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product has been successfully deleted",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Error in deleting product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/product/{product_code}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve product details using the product code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Products"
                ],
                "summary": "Get a product by its product code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product Code",
                        "name": "product_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product successfully retrieved",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.ProductResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " message": {
                                            "type": "string"
                                        },
                                        "product": {
                                            "$ref": "#/definitions/model.Product"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "No product found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.ProductResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " message": {
                                            "type": "string"
                                        },
                                        "product": {
                                            "$ref": "#/definitions/model.Product"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve product",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "description": "Authenticates a user using their email and password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.JwtData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " expires": {
                                            "type": "string"
                                        },
                                        " issued": {
                                            "type": "string"
                                        },
                                        " issuer": {
                                            "type": "string"
                                        },
                                        " user_id": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/order": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all orders for a given user with an optional status filter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get user orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Status (Pending, Shipped, Delivered, Cancelled)",
                        "name": "order_status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page (Default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size (Default 10)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user orders",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.ListOrderResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " message": {
                                            "type": "string"
                                        },
                                        " page": {
                                            "type": "integer"
                                        },
                                        " size": {
                                            "type": "integer"
                                        },
                                        " total_orders": {
                                            "type": "integer"
                                        },
                                        " total_pages": {
                                            "type": "integer"
                                        },
                                        "orders": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Order"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve orders",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new order for a user with a list of products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Place a new order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Order Request",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Order placed successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.OrderResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " order": {
                                            "$ref": "#/definitions/model.Order"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to place order",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/order/{order_reference}/cancel": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancels an order associated with the provided order reference",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel a user order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authenticated User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Order Reference",
                        "name": "order_reference",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.OrderResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " order": {
                                            "$ref": "#/definitions/model.Order"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input or Order in %s status cannot be cancelled",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Failed to update order",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/signup": {
            "post": {
                "description": "Registers a user with the provided details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Signup Request",
                        "name": "signup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handler.UserResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " order": {
                                            "$ref": "#/definitions/model.User"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        " error_message": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateProductRequest": {
            "type": "object",
            "required": [
                "currency",
                "price",
                "product_name",
                "stock",
                "user_id"
            ],
            "properties": {
                "currency": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "price": {
                    "type": "number"
                },
                "product_description": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string",
                    "minLength": 3
                },
                "stock": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handler.ListOrderResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total_orders": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.OrderRequest": {
            "type": "object",
            "required": [
                "order_reference",
                "products",
                "user_id"
            ],
            "properties": {
                "order_reference": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.ProductDTO"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "handler.OrderResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "order": {
                    "$ref": "#/definitions/model.Order"
                }
            }
        },
        "handler.ProductDTO": {
            "type": "object",
            "required": [
                "product_code",
                "product_quantity"
            ],
            "properties": {
                "product_code": {
                    "type": "string"
                },
                "product_quantity": {
                    "type": "integer"
                }
            }
        },
        "handler.ProductResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/model.Product"
                }
            }
        },
        "handler.SignupRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "first_name",
                "last_name",
                "password",
                "user_currency"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "minLength": 8
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "user_currency": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                }
            }
        },
        "handler.UpdateOrderRequest": {
            "type": "object",
            "required": [
                "order_status"
            ],
            "properties": {
                "order_status": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateProductRequest": {
            "type": "object",
            "required": [
                "currency",
                "price",
                "product_name",
                "stock"
            ],
            "properties": {
                "currency": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "price": {
                    "type": "number"
                },
                "product_description": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string",
                    "minLength": 3
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "handler.UserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "order_reference": {
                    "type": "string",
                    "example": "order123"
                },
                "order_status": {
                    "description": "Pending, Shipped, Delivered, Canceled",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.OrderStatus"
                        }
                    ],
                    "example": "Pending"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Product"
                    }
                },
                "total_price": {
                    "type": "number",
                    "example": 10.5
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.OrderStatus": {
            "type": "string",
            "enum": [
                "Pending",
                "Shipped",
                "Delivered",
                "Cancelled"
            ],
            "x-enum-varnames": [
                "Pending",
                "Shipped",
                "Delivered",
                "Cancelled"
            ]
        },
        "model.Product": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_code": {
                    "type": "string"
                },
                "product_description": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_currency": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "user_role": {
                    "description": "user or admin",
                    "type": "string"
                }
            }
        },
        "util.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "error_message": {
                    "type": "string"
                }
            }
        },
        "util.JwtData": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "integer"
                },
                "issued": {
                    "type": "integer"
                },
                "issuer": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}